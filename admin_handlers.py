# admin_handlers.py
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from config import ADMIN_ID
from database import get_all_users

router = Router()

@router.message(Command("admin"))
async def admin_panel(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin ‚Äî –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return
    
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("üìä –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="admin_users_list")],
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä "‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏—è"
        [InlineKeyboardButton("‚Ü©Ô∏è –ó–∞–∫—Ä—ã—Ç—å", callback_data="admin_close")]
    ])
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=kb)

@router.callback_query(lambda c: c.data == "admin_close")
async def admin_close(callback: CallbackQuery):
    """–ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∞ (—É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ)."""
    await callback.message.delete()
    await callback.answer()

@router.callback_query(lambda c: c.data == "admin_users_list")
async def admin_users_list(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (name, email, phone, course, paid)."""
    if callback.from_user.id != ADMIN_ID:
        await callback.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!", show_alert=True)
        return
    
    users = get_all_users()
    if not users:
        await callback.message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return
    
    text = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
    for (id_, tg_id, name, email, phone, course, paid) in users:
        paid_status = "‚úÖ" if paid == 1 else "‚ùå"
        text += (f"<b>ID:</b> {id_}\n"
                 f"<b>tg_id:</b> {tg_id}\n"
                 f"<b>–ò–º—è:</b> {name}\n"
                 f"<b>Email:</b> {email}\n"
                 f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
                 f"<b>–ö—É—Ä—Å:</b> {course}\n"
                 f"<b>–û–ø–ª–∞—á–µ–Ω–æ:</b> {paid_status}\n\n")
    
    await callback.message.answer(text)
    await callback.answer()

def register_admin_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –∞–¥–º–∏–Ω-—Ö–µ–Ω–¥–ª–µ—Ä–æ–≤."""
    dp.include_router(router)
